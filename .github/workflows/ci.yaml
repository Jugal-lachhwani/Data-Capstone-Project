name: MLOps Pipeline (DVC + MLflow + FastAPI + Docker)

on:
  push:
    branches:
      - main

jobs:
  build-train-register:
    name: Train Model and Register with MLflow
    runs-on: ubuntu-latest

    steps:
      # ðŸ§° Step 1: Checkout repo
      - name: Checkout repository
        uses: actions/checkout@v4

      # ðŸ§° Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.9"

      # ðŸ§° Step 3: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # ðŸ§° Step 4: Download NLTK data
      - name: Download NLTK data
        run: |
          python -m nltk.downloader wordnet stopwords

      # ðŸ§° Step 5: Run DVC pipeline (train model)
      - name: Run DVC pipeline
        env:
          MLFLOW_TRACKING_URI: ${{ secrets.MLFLOW_TRACKING_URI }}
          MLFLOW_TRACKING_USERNAME: ${{ secrets.MLFLOW_TRACKING_USERNAME }}
          MLFLOW_TRACKING_PASSWORD: ${{ secrets.MLFLOW_TRACKING_PASSWORD }}
        run: |
          dvc repro

      # ðŸ§° Step 6: Upload model artifacts
      - name: Upload model artifacts
        uses: actions/upload-artifact@v4
        with:
          name: models
          path: models/*.pkl
          retention-days: 1

  docker-build-and-run:
    name: Build and Run Docker Container
    runs-on: ubuntu-latest
    needs: build-train-register  # Wait until model training is done

    steps:
      # ðŸ§° Step 1: Checkout repo
      - name: Checkout repository
        uses: actions/checkout@v4

      # ðŸ§° Step 2: Download model artifacts from previous job
      - name: Download model artifacts
        uses: actions/download-artifact@v4
        with:
          name: models
          path: models/

      # ðŸ§° Step 3: Build Docker Image
      - name: Build Docker Image
        run: |
          docker build -t mlops-fastapi:latest -f ./FastAPI/Dockerfile .

      # ðŸ§° Step 4: Run Docker Container
      - name: Run Docker Container
        run: |
          docker run -d -p 8000:8000 --name mlops-app mlops-fastapi:latest
          echo "Docker container started successfully"

      # ðŸ§° Step 5: Wait for container to be ready
      - name: Wait for FastAPI to start
        run: |
          echo "Waiting for FastAPI to be ready..."
          sleep 10

      # ðŸ§° Step 6: Test the running container
      - name: Test FastAPI endpoint
        run: |
          curl -f http://localhost:8000/ || exit 1
          echo "FastAPI is running successfully!"

      # ðŸ§° Step 7: Show container logs
      - name: Show container logs
        if: always()
        run: |
          docker logs mlops-app

      # ðŸ§° Step 8: Stop and remove container
      - name: Cleanup
        if: always()
        run: |
          docker stop mlops-app || true
          docker rm mlops-app || true