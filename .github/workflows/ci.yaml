name: MLOps Pipeline (DVC + MLflow + FastAPI + Docker)

on:
  push:
    branches:
      - main

jobs:
  build-train-register:
    name: Train Model and Register with MLflow
    runs-on: ubuntu-latest

    steps:
      # ðŸ§° Step 1: Checkout repo
      - name: Checkout repository
        uses: actions/checkout@v4

      # ðŸ§° Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.9"

      # ðŸ§° Step 3: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # ðŸ§° Step 4: Download NLTK data
      - name: Download NLTK data
        run: |
          python -m nltk.downloader wordnet stopwords

      # ðŸ§° Step 5: Run DVC pipeline (train model)
      - name: Run DVC pipeline
        env:
          MLFLOW_TRACKING_URI: ${{ secrets.MLFLOW_TRACKING_URI }}
          MLFLOW_TRACKING_USERNAME: ${{ secrets.MLFLOW_TRACKING_USERNAME }}
          MLFLOW_TRACKING_PASSWORD: ${{ secrets.MLFLOW_TRACKING_PASSWORD }}
        run: |
          dvc repro

  docker-deploy:
    name: Build and Deploy Docker Container
    runs-on: ubuntu-latest
    needs: build-train-register  # Wait until model training is done

    steps:
      # ðŸ§° Step 1: Checkout repo
      - name: Checkout repository
        uses: actions/checkout@v4

      # ðŸ§° Step 2: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # ðŸ§° Step 3: Login to DockerHub
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # ðŸ§° Step 4: Build and Push Docker Image
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: ./FastAPI
          file: ./FastAPI/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/mlops-fastapi:latest

      # ðŸ§° Step 5: Deploy FastAPI container (example: Render, EC2, etc.)
      - name: Deploy FastAPI App (example step)
        run: |
          echo "Deploying the FastAPI app..."
          # Example if using Docker Compose or SSH to EC2
          # ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_IP }} \
          # "docker pull ${{ secrets.DOCKERHUB_USERNAME }}/mlops-fastapi:latest && docker run -d -p 8000:8000 mlops-fastapi"